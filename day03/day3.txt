[list]
- SWEA 4835_구간합
- BOJ 2559_수열
- BOJ 11659 구간 합 구하기 4

[dictionary]
- BOJ 1302_베스트셀러
[]
- BOJ 8892_팰린드롬

[구현]
-SWEA 4831_전기버스


슬라이딩 윈도우 
=> N^2 에서 N 으로 시간 복잡도를 줄일 수 있음.
=> 단점? 사용하기 힘든 경우
    : 모든 값을 검토할 이유가 없는 경우엔 오히려 복잡해짐.
    : query(요청)가 고정된 경우에만 사용할 수 있음.

누적합(부분합)
=> 일단 누적합을 함=> O(N)
=> 이 후 리스트에서 뽑아서 계산만 하면 됨 => O(1)
=> 따라서 O(N)의 시간 복잡도를 가짐.

함수는 새로운 걸 만들어 줌. 따라서 재할당을 해서 사용해야 함.
매서드는 원본 자체를 변화시키기 때문에 따로 할당할 필요가 없음.

2. 순열 / 조합으로 뽑기
조합 a,b,c => ab, ac, bc
순열 a,b,c => ab, ac, bc, ba, ca, cb

from itertools import combinations

선언하기
nums = [1,2,3]
combi = list(combinations(nums, 2)

코테 구분
1. 구현 관련 문제 (삼성 혹은 금융)
2. 그래프 관련 문제 -DFS/BFS (어디에나 나옴)
3. 기타 등등