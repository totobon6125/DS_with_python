2 차원 배열 - 전치 : 행과 열을 뒤 바꾸는 것

[
    'abc',
    'bcd',
    'efg'
]

문자형은 스왑이 안되기 때문에 zip 을 사용하여 해야 한다.

----------------------------------------------------------
2 차원 배열 - 회전 : 
matrix = [
   [3, 7, 9],
   [4, 2, 6],
   [8, 1, 5]
]

matrix_R = [
   [8, 4, 3],
   [1, 2, 7],
   [5, 6, 9]
]

r, c => r', c'
0, 0 => 0,  2
1, 0 => 0,  1
2, 0 => 0,  0

=> 2 - 0 = 2
=> 2 - 1 = 1
=> 2 - 2 = 0


matrix_L = [
   [3, 7, 9],
   [4, 2, 6],
   [8, 1, 5]
]

----------------------------------------------
델타 방향전환
=> 인접한 칸으로 이동한 것.

matrix 3*3
-1 행 +1   -1 열 +1
[상, 하]    [좌, 우]

dr = [-1, +1, 0, 0]
dc = [0, 0, -1, +1]

주의점
- 범위를 넘어가면 안됨!!
   패딩 이나 조건을 통해 범위를 지정.

----------------------------------------------
함수
- 스코프 (LEGB 규칙: LEGB 순서로 변수를 할당함.)
   local
   Global

   local 안에서 'global a' 로 선언함으로써 글로벌 영역의 변수 a 를 조작 할 수 있음.

재귀함수!!
def recursion_func():
   print('난 재귀')
   recursion_func()
recursion_func()

실행시키면 스택 오버 플로우가 발생함.

import sys
sys.setrecursionlimit(10**9)